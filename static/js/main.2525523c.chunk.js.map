{"version":3,"sources":["components/Timer/Timer.js","App.js","index.js"],"names":["Timer","state","count","Math","round","props","time","autostart","width","change","toFixed","startTimer","setState","stopTimer","changeCount","step","changeWidth","setInterval","className","onClick","this","style","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNA8DeA,G,iNA1DXC,MAAQ,CACJC,MAAOC,KAAKC,MAAM,EAAKC,MAAMC,KAAO,IACpCC,WAAW,EACXC,MAAO,IACPC,QAAS,IAAMN,KAAKC,MAAM,EAAKC,MAAMC,KAAO,KAAKI,QAAQ,I,EAiB7DC,WAAa,WACT,EAAKC,SAAS,CACVL,WAAW,K,EAInBM,UAAY,WACR,EAAKD,SAAS,CACVL,WAAW,EACXL,MAAO,EAAKD,MAAMC,S,EAI1BY,YAAc,WACV,EAAKF,SAAS,CACVV,MAAO,EAAKD,MAAMC,MAAQ,EAAKG,MAAMU,Q,EAI7CC,YAAc,WACV,EAAKJ,SAAS,CACVJ,MAAQ,EAAKP,MAAMO,MAAQ,EAAKP,MAAMQ,OAAS,EAAKJ,MAAMU,Q,kEAnC7C,IAAD,OAChBE,aAAY,WACJ,EAAKhB,MAAMM,UACc,IAArB,EAAKN,MAAMC,QACX,EAAKS,aACL,EAAKG,cACL,EAAKE,eAGT,EAAKH,cAEV,O,+BA6BH,OACI,yBAAKK,UAAU,aACX,4BAAQC,QAASC,KAAKT,YAAtB,SACA,4BAAQQ,QAASC,KAAKP,WAAtB,QACA,uBAAGK,UAAU,WAAWE,KAAKnB,MAAMC,MAAnC,aACA,uBAAGgB,UAAU,MAAMG,MAAO,CAAEb,MAAOY,KAAKnB,MAAMO,MAAQ,Y,GArDlDc,cCSLC,E,uKANT,OACG,kBAAC,EAAD,CAAOjB,KAAM,KAAMS,KAAM,EAAGR,WAAS,Q,GAH5Be,aCElBE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.2525523c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Timer.css\";\n\nclass Timer extends Component {\n    state = {\n        count: Math.round(this.props.time / 60),\n        autostart: true,\n        width: 100,\n        change: (100 / Math.round(this.props.time / 60)).toFixed(4)\n    }\n\n    componentDidMount() {\n        setInterval(() => {\n            if (this.state.autostart) {\n                if (this.state.count !== 0) {\n                    this.startTimer();\n                    this.changeCount();\n                    this.changeWidth();\n                }\n            } else {\n                this.stopTimer();\n            }\n        }, 1000);\n    }\n\n    startTimer = () => {\n        this.setState({\n            autostart: true\n        });\n    }\n\n    stopTimer = () => {\n        this.setState({\n            autostart: false,\n            count: this.state.count\n        });\n    }\n\n    changeCount = () => {\n        this.setState({ \n            count: this.state.count - this.props.step\n        })\n    }\n\n    changeWidth = () => {\n        this.setState({\n            width: (this.state.width - this.state.change * this.props.step)\n        })\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <button onClick={this.startTimer}>Start</button>\n                <button onClick={this.stopTimer}>Stop</button>\n                <p className='seconds'>{this.state.count} seconds.</p> \n                <p className='row' style={{ width: this.state.width + '%' }} ></p>\n            </div>\n        )\n    }\n}\n\nexport default Timer;\n\n\n\n\n","import React, { Component } from \"react\";\nimport Timer from \"../src/components/Timer/Timer\";\nimport \"../src/components/Timer/Timer.css\";\n\nclass App extends Component {\n   render() {\n      return(\n         <Timer time={1200} step={1} autostart/>\n      )\n   }\n}\n  \nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}